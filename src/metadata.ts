/* eslint-disable */
export default async () => {
    const t = {
        ["./trips/search/dto/enums/trips-search-sorting.enum"]: await import("./trips/search/dto/enums/trips-search-sorting.enum"),
        ["./trips/search/dto/trips-search-response.dto"]: await import("./trips/search/dto/trips-search-response.dto"),
        ["./trips/common/dto/trip-origin-response.dto"]: await import("./trips/common/dto/trip-origin-response.dto"),
        ["./trips/common/dto/trip-destination-response.dto"]: await import("./trips/common/dto/trip-destination-response.dto"),
        ["./core/auth/dto/login-response.dto"]: await import("./core/auth/dto/login-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./trips/retrieve-api/dto/trips-retrieve-api-response.dto"), { "TripsRetrieveApiResponseDto": { id: { required: true, type: () => String }, type: { required: true, type: () => String }, display_name: { required: true, type: () => String }, origin: { required: true, type: () => String }, destination: { required: true, type: () => String }, cost: { required: true, type: () => Number }, duration: { required: true, type: () => Number } } }], [import("./trips/search/dto/query/trips-search-find-all.query"), { "TripsSearchFindAllQuery": { origin: { required: true, type: () => String, description: "Trip origin - Find available values from /trips/origins", minLength: 3, maxLength: 3 }, destination: { required: true, type: () => String, description: "Trip destination - Find available values from /trips/destinations", minLength: 3, maxLength: 3 }, sort_by: { required: true, description: "Trips sorting order - Find available values from /trips/search/sorting", enum: t["./trips/search/dto/enums/trips-search-sorting.enum"].TripsSearchSortingEnum }, limit: { required: true, type: () => Number, description: "Trips results limit", default: 5, minimum: 1, maximum: 20 } } }], [import("./trips/search/dto/trips-search-response.dto"), { "TripsSearchResponseDto": { type: { required: true, type: () => String }, display_name: { required: true, type: () => String }, origin: { required: true, type: () => String }, destination: { required: true, type: () => String }, cost: { required: true, type: () => Number }, duration: { required: true, type: () => Number } } }], [import("./trips/common/dto/trip-origin-response.dto"), { "TripOriginResponseDto": { code: { required: true, type: () => String } } }], [import("./trips/common/dto/trip-destination-response.dto"), { "TripDestinationResponseDto": { code: { required: true, type: () => String } } }], [import("./core/users/dto/user-response.dto"), { "UserResponseDto": { _id: { required: true, type: () => require("mongoose").Types.ObjectId }, username: { required: true, type: () => String } } }], [import("./core/auth/dto/token-payload-response.dto"), { "TokenPayloadResponseDto": { sub: { required: true, type: () => String }, username: { required: true, type: () => String } } }], [import("./core/auth/dto/login-response.dto"), { "LoginResponseDto": { access_token: { required: true, type: () => String } } }], [import("./core/auth/dto/login-request.dto"), { "LoginRequestDto": { username: { required: true, type: () => String }, password: { required: true, type: () => String } } }]], "controllers": [[import("./trips/search/trips-search.controller"), { "TripsSearchController": { "getSortingOptions": { summary: "List of all the available sorting options for /trips/search enpoint.", description: "Bearer token requested for authentication. <br>\nCaching is used for this response. <br>", type: [String] }, "findAll": { summary: "List of all the found sorted trips.", description: "Bearer token requested for authentication. <br>\nCaching is used for this response.", type: [t["./trips/search/dto/trips-search-response.dto"].TripsSearchResponseDto] } } }], [import("./trips/trips.controller"), { "TripsController": { "getOrigins": { summary: "List of all trips origins ordered alphabetically.", description: "Bearer token requested for authentication. <br>\nCaching is used for this response.", type: [t["./trips/common/dto/trip-origin-response.dto"].TripOriginResponseDto] }, "getDestinations": { summary: "List of all trips destinations ordered alphabetically.", description: "Bearer token requested for authentication. <br>\nCaching is used for this response.", type: [t["./trips/common/dto/trip-destination-response.dto"].TripDestinationResponseDto] } } }], [import("./core/auth/auth.controller"), { "AuthController": { "login": { summary: "Login with a valid user to retrieve the access token", type: t["./core/auth/dto/login-response.dto"].LoginResponseDto } } }]] } };
};